/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.documentpicker;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollFunction;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.util.TiActivitySupport;
import org.appcelerator.titanium.util.TiActivityResultHandler;

import org.appcelerator.titanium.TiApplication;

import android.content.Intent;
import android.app.Activity;

import droidninja.filepicker.FilePickerBuilder;
import droidninja.filepicker.FilePickerConst;

@Kroll.module(name="TitaniumDocumentPicker", id="ti.documentpicker")
public class TitaniumDocumentPickerModule extends KrollModule implements TiActivityResultHandler
{

	// Standard Debugging variables
	private static final String LCAT = "TitaniumDocumentPickerModule";
	private static final boolean DBG = TiConfig.LOGD;

	private KrollFunction callback;
	protected int requestCode;

	@Kroll.method
	public void showDocumentPicker(KrollDict args)
	{
		// TODO: Properties to expose: maxCount, callback, theme (if possible)

		Activity activity = TiApplication.getInstance().getCurrentActivity();
		TiActivitySupport support = (TiActivitySupport) activity;
		
		requestCode = support.getUniqueResultCode();
		callback = (KrollFunction) args.get("callback");

		FilePickerBuilder.getInstance().setMaxCount(5).pickPhoto(activity);
	}

	@Override
	public void onResult(Activity activity, int thisRequestCode, int resultCode, Intent data)
	{
		if (callback == null || thisRequestCode != requestCode || data == null) {
			return;
		}

		// TODO: Handle data

		switch (requestCode) {
			case FilePickerConst.REQUEST_CODE_PHOTO:
				if (resultCode == Activity.RESULT_OK && data != null) {
					// photoPaths = new ArrayList<>();
					// photoPaths.addAll(data.getStringArrayListExtra(FilePickerConst.KEY_SELECTED_MEDIA));
				}
				break;
			case FilePickerConst.REQUEST_CODE_DOC:
				if (resultCode == Activity.RESULT_OK && data != null) {
					// docPaths = new ArrayList<>();
					// docPaths.addAll(data.getStringArrayListExtra(FilePickerConst.KEY_SELECTED_DOCS));
				}
				break;
        }
	}

	@Override
	public void onError(Activity activity, int requestCode, Exception e)
	{
		if (callback == null) return;

		KrollDict event = new KrollDict();
		event.put("success", false);
		callback.callAsync(getKrollObject(), event);
	}
}

